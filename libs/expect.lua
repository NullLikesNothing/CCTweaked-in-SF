local a,b=select,type;local function c(...)local d=table.pack(...)for e=d.n,1,-1 do if d[e]=="nil"then table.remove(d,e)end end;if#d<=1 then return tostring(...)else return table.concat(d,", ",1,#d-1).." or "..d[#d]end end;local function f(g,h)if h~="table"and h~="userdata"then return h end;local i=debug.getmetatable(g)if not i then return h end;local j=rawget(i,"__name")if type(j)=="string"then return j else return h end end;local function k(l,g,...)local h=b(g)for e=1,a("#",...)do if h==a(e,...)then return g end end;local j;local m,n=pcall(debug.getinfo,3,"nS")if m and n.name and n.name~=""and n.what~="C"then j=n.name end;h=f(g,h)local o=c(...)if j then error(("bad argument #%d to '%s' (%s expected, got %s)"):format(l,j,o,h),3)else error(("bad argument #%d (%s expected, got %s)"):format(l,o,h),3)end end;local function p(q,l,...)k(1,q,"table")k(2,l,"string")local g=q[l]local h=b(g)for e=1,a("#",...)do if h==a(e,...)then return g end end;h=f(g,h)if g==nil then error(("field '%s' missing from table"):format(l),3)else error(("bad field '%s' (%s expected, got %s)"):format(l,c(...),h),3)end end;local function r(s)return s~=s end;local function t(s,u,v)k(1,s,"number")u=k(2,u,"number","nil")or-math.huge;v=k(3,v,"number","nil")or math.huge;if u>v then error("min must be less than or equal to max)",2)end;if r(s)or s<u or s>v then error(("number outside of range (expected %s to be within %s and %s)"):format(s,u,v),3)end;return s end;return setmetatable({expect=k,field=p,range=t},{__call=function(w,...)return k(...)end})